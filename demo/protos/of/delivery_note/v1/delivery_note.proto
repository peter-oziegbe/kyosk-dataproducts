syntax = "proto3";

package of.delivery_note.v1;

import "common/audit/v1/audit.proto";
import "common/audit/v1/status_change.proto";

import "google/protobuf/timestamp.proto";
import "google/type/timeofday.proto";
import "google/type/date.proto";

enum DNStatus {
    // (INIT) represents when the DN was created
    CREATED = 0;

    // when the DN has been assiged to a DT
    SCHEDULED = 1;

    // When the DN has left the warehouse
    DISPATCHED = 2;

    // When the DN has been delivered
    DELIVERED = 3;

    // (TERMINAL) When the DN has been paid for
    PAID = 4;

    // (TERMINAL) A DN is rescheduled for future delivery 
    RESCHEDULED = 5;

    // (TERMINAL) the DN is cancelled by the driver for whatever reason
    CANCELLED = 6;

}

message DNItem {

    // This is the product bundle id. This should be unique within a sale order
    string catalog_id = 1;

    // this represents the product bundle ordered qty
    int32 qty = 4;

    // the selling price for the product bundle
    float unit_price = 5;

    // This is the amount before discount but inclusive of VAT
    float total_gross_incl = 6;
    
    string discount_rule_id = 7;
    float discount_amt = 8;
   
    string vat_id = 9;
    float vat_amt = 10;

    // this is the amount after discount deduction inclusive of VAT
    float total_net_incl = 11;

     // this is the amount after discount deduction exclusive of VAT
    float total_net_excl = 12;

}

message DeliveryNote {

    string id = 1;

    string dn_code = 2; 

    string sales_order_id = 3;

    DNStatus status = 4;

    repeated common.audit.v1.StatusChange status_change_history = 5;

    repeated DNItem items = 6;

    google.type.Date delivery_date = 7; 

    google.type.TimeOfDay window_start = 8;

    google.type.TimeOfDay window_end = 9;

    google.protobuf.Timestamp time_delivered = 10;

    string trip_id = 15;

    string territory_id = 16;

    float total_gross_incl = 17;

    float total_discount = 18;

    float total_net_incl = 19;

    float total_net_excl = 20;

    float total_vat = 21;

    float total_delivered_incl = 22;

    common.audit.v1.Audit audit = 35;


}



message TransitionDNCommand{
    string id = 1;
    string dn_id = 2;
    DNStatus to_status = 3;
}

message TransitionDNResponse {
    string id = 1;
    string dn_id = 2;
    DNStatus to_status = 3;
}

service DNService {
    rpc TransitionDN(TransitionDNCommand) returns (TransitionDNResponse);
}