syntax = "proto3";
package payments.wallet_transaction.v1;

import "payments/wallet_transaction/v1/wallet_transaction.proto";
import "common/query/v1/query.proto";


message BookingResponse{
    string booking_id = 1;
}

message WalletTransactionResponse {
    repeated WalletTransaction transactions = 1;
    //This the total amount of records based on the search criteria.
    int64 total_records = 2;
}

message TerminateWorkflowRequest{
    string workflow_ids = 1; // comma seperated string of workflow ids
    string payment_channel = 2; // optional payment channel
}

message TerminateWorkflowResponse{
    bool completed = 1;
}


service WalletTransactionService {
    rpc BookTransaction (WalletBookingRequest) returns (BookingResponse);
    rpc Query(common.query.v1.QueryRequest) returns(WalletTransactionResponse);
    rpc TerminateTransactionBookingWorkflow(TerminateWorkflowRequest) returns(TerminateWorkflowResponse);
}
