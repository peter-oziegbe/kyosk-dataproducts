syntax = "proto3";
package payments.wallet_transaction.v1;

import "google/protobuf/timestamp.proto";
import "payments/wallet/v1/wallet.proto";
import "erpnext/journal_entry/v1/journal_entry.proto";
import "common/general/v1/async.proto";
import "common/shared/v1/shared.proto";

// TransactionType represents the transaction types supported by the wallet
enum TransactionType {
  DEBIT = 0;
  CREDIT = 1;
}

// WalletTransaction represents the wallet transactions in the kyosk eco-system
message WalletTransaction {
  
  // UID in the kyosk eco-system
  string id = 1;
  // type of wallet used for this transaction eg customer wallet, internal business wallet
  string wallet_id = 2;
  // UID for the wallet owner in the kyosk eco-system eg customer, driver IDs
  string user_id = 3;

  // this is an id that is shared with both sides of a double entry transaction
  payments.wallet.v1.EntryType entry_type = 4;

  // this is an id that is shared with both sides of a double entry transaction
  string double_entry_id = 5;

  // Payment request associated to this transaction 
  string payment_request_id = 6;

  // The transaction reference from channel
  string transaction_reference = 7;

  // Currency of the amount used in this transaction
  string currency = 8;
 
  // TransactionType that characterised this transaction: DEBIT, CREDIT or REFUND
  TransactionType transaction_type = 10;
  
  // Amount that's either debited or credited to this wallet
  double amount = 14;
  
  // Current balance of the wallet of  the time of the transaction
  double balance_before = 19;

  // Current balance of the wallet of  the time of the transaction
  double balance_after = 20;
  
  
  // Narration of the transactions
  string narration = 21;

   // This is the payment channel used. could be any of Mpesa,Flutterwave,Cash ETC
  string payment_channel = 22;
  
  // Time of the transaction
  google.protobuf.Timestamp transaction_time = 27;

  // Country of the transaction
  string country = 38;

  string created_by = 40;
}

message WalletBookingRequest{

  string id = 1;

  // is nullable
  string payment_request_id = 2;

  // This refrences the actual transaction document 
  string transaction_reference = 3;


  // This is the wallet to deposit money into 
  string wallet_to_cr = 8;

  //this is the wallet to remove money from
  string wallet_to_dr = 13;

  // This is the payment channel used. could be any of Mpesa,Flutterwave,Cash ETC
  string payment_channel = 15;

  // Country of the transaction
  common.shared.v1.CountryCode country_code = 16;

  // Currency of the amount used in this transaction
  common.shared.v1.Currency currency = 17;

  // This is the amount to add/remove
  double amount = 18;

  string narration = 20;

  // Liens block any future debits from an account until this request is fullfilled. A lien does not terminate immediately
  bool impose_lien = 22;

  // This would default to 999. The lower the priority the earlier it will be handled. Liens overtake non lien priorities
  // prioritization Feature not implemented yet  
  int32 priority = 25;

  common.general.v1.AsyncReply reply_to = 30;

  common.general.v1.AsyncReply settlement_reply_to = 34;

  string created_by = 37;

  // some transactions do not need, have equivalent actions done by ERPNext or do have equivalent ERPNext trs
  bool should_create_erp_journal_entry = 38;

  // This will be passed by PR_svc when booking
  string customer_erp_id = 39;

  // entry type to determine what accounts the creation service will use
  erpnext.journal_entry.v1.JournalEntryType journal_entry_type = 40;

}


enum WalletBookingStatus{

  SUCCESSFUL = 0;
  FAILED = 1;

}

message WalletBookingResponse{

  string id = 1;

  // is nullable
  string payment_request_id = 2;

  // This refrences the actual transaction document 
  string transaction_reference = 3;

  // This is the amount to add/remove
  common.shared.v1.Currency currency = 7;

  // This is the amount to add/remove
  double amount = 8;

  // This denotes the status of the booking
  WalletBookingStatus  status = 12; 
  
}


