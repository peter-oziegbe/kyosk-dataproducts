syntax = "proto3";
package payments.cash.v1;

import "common/shared/v1/shared.proto";

message InitiateCashPaymentRequest{
  int32 amount = 1;
  common.shared.v1.Currency currency = 2;
  string customer_wallet_id =3;
  string driver_wallet_id =4;
  string narration = 5;
  string driver_id =6;
  string payment_request_id =7;
}

message InitiateCashPaymentResponse {
  string message = 1;
  string transaction_booking_id = 2;
  string amount = 3;
  common.shared.v1.Currency currency = 4;
  string narration = 5;
  string driver_ledger_id = 6;
  string driver_id = 7;
  string customer_wallet_id =8;
}

message HandleCashDepositRequest{
  string driver_wallet_id =1;
  string driver_id = 2;
  int32 amount =3;
  string reference =4;
  string narration = 5;
  common.shared.v1.Currency currency =6;
}

message HandleCashDepositResponse{
  string message =1;
  string transaction_booking_id =2;
  double amount =3;
  common.shared.v1.Currency currency =4;
  string reference =6;
  string narration =7;
  string driver_ledger_id =9;
  string driver_id =10;
}

message DriverCashPayment {
  // id generated by mongodb
  string id = 5;
  string driver_id =1;
  // run is complete if all customer payments have a remaining_amount of 0
  bool run_is_complete =2;
  repeated CustomerPayment customer_payments =3;
  // id of workflow associated with this run
  string workflow_id =4;
  // any deposit that is not used to fulfil a payment request
  // not likely
  double unused_deposit =6;
}

message CustomerPayment{
  // customer's wallet id
  string wallet_id =1;
  // amount that customer gave driver (SI amount)
  double initial_amount =2;
  // amount not yet settled (settling happens on deposit of cash by driver)
  double remaining_amount =3;
  // booking id of the driver debit associated with this transaction on cash receipt
  string driver_dr_tr_booking_id =4;
  // booking id of the driver debit associated with this transaction on cash deposit
  string driver_cr_tr_booking_id =5;
  // booking id of the customer debit associated with this transaction on cash deposit
  string cr_tr_booking_id=6;
}

message PostTransactionRequest{
  TransactionType transaction_type = 1;
  string amount = 2;
  string wallet_to_cr = 3;
  string wallet_to_debit = 4;
  string reference = 5;
  string narration = 6;
}

message PostTransactionResponse {
    TransactionStatus status = 1;
}

enum TransactionStatus {
    SUCCESS = 0;
    FAILED = 1;
}

enum TransactionType {
    CREDIT = 0;
    DEBI = 1;
}
