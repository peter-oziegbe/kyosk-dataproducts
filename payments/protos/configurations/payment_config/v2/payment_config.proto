syntax = "proto3";
package configurations.payment_config.v2;

message Country{
  // Country's uuid in payment config svc
  string id = 1;
  // County name e.g. Kenya, South Africa
  string country = 2;
  // ISO country Code e.g. KE, ZA
  string country_code = 3;
}

message FetchCountriesRequest{
}

message FetchCountriesResponse{
  repeated Country countries = 1;
}

message PaymentOption{
  // uuid in our payment config svc
  string id = 1;
  // name
  string name = 2;
  // desc
  string description = 3;
  // countries where it's available
  repeated Country countries = 4;
}

// Request payload for available payment options for a country
message FetchPaymentOptionsRequest{
  string country_code = 1;
}

message FetchPaymentOptionsResponse{
  repeated PaymentOption payment_options= 1;
}

message CreateCountriesDTO{
  // County name e.g. Kenya, South Africa
  string country = 1;
  // ISO country Code e.g. KE, ZA
  string country_code = 2;
}

message CreateCountriesRequest{
  repeated CreateCountriesDTO create_countries_dto =1;
}

message CreateCountriesResponse{
  repeated Country countries =1;
}

message CreatePaymentOptionRequest{
  // name
  string name = 1;
  // desc
  string description = 2;
  // countries where it's available
  repeated Country countries =3;
}

message CreatePaymentOptionResponse{
  PaymentOption payment_option = 1;
}

enum Action{
  DEACTIVATE = 0;

  ACTIVATE= 1;
}

message ActivateOrDeactivatePaymentOptionRequest{
  PaymentOption payment_option =1;
}

message ActivateOrDeactivatePaymentOptionResponse{
  PaymentOption payment_option = 1;
}

message UpdatePaymentOptionRequest{
  PaymentOption payment_option =1;

  Action action= 2;
}

message UpdatePaymentOptionResponse{
  PaymentOption payment_option =1;
}

// Services
service FetchPaymentOptionsService {
  rpc CreatePaymentOption(CreatePaymentOptionRequest) returns (CreatePaymentOptionResponse) {}
  rpc UpdatePaymentOption (UpdatePaymentOptionRequest) returns (UpdatePaymentOptionResponse) {}
  rpc ActivateOrDeactivateOption (ActivateOrDeactivatePaymentOptionRequest) returns (ActivateOrDeactivatePaymentOptionResponse) {}
  rpc FetchPaymentOptions(FetchPaymentOptionsRequest) returns (FetchPaymentOptionsResponse) {}
}

service FetchPaymentCountriesService {
  rpc CreateCountry(CreateCountriesRequest) returns (CreateCountriesResponse) {}
  rpc FetchPaymentCountries(FetchCountriesRequest) returns (FetchCountriesResponse) {}
}

