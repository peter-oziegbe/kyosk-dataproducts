syntax = "proto3";
package configurations.payment_config.v2;

import "common/query/v1/query.proto";
import "configurations/payment_config/v2/payment_option.proto";
import "payments/cash/v1/cash_payments.proto";
import "configurations/payment_config/v2/cash_collection_limit.proto";

message UpdatePaymentOptionRequest{
  PaymentOption payment_option =1;
}

message UpdatePaymentOptionResponse{
  string message = 3;
  PaymentOption payment_option =4;
}

message CreatePaymentOptionCmd{
  PaymentOption template =3;
}

message CreatePaymentOptionResponse {
  string message = 3;
  PaymentOption payment_option = 4;
}

message QueryPaymentOptionsResponse{
  repeated PaymentOption payment_options= 4;
}

message CashCollectionLimitQueryResponse{
  repeated CashCollectionLimit limits =1;
}

message CashCollectionLimitUpdateResponse{
  CashCollectionLimit limit =1;
}

// configure, read and update payment options
service PaymentOptionsService {
  rpc CreatePaymentOption(CreatePaymentOptionCmd) returns (CreatePaymentOptionResponse) {}
  rpc UpdatePaymentOption (UpdatePaymentOptionRequest) returns (UpdatePaymentOptionResponse) {}
  rpc QueryPaymentOptions (common.query.v1.QueryRequest) returns (QueryPaymentOptionsResponse) {}
}

// configure, read and update cash collection limits
service CashCollectionLimitsService {
  rpc QueryCashCollectionLimit(common.query.v1.QueryRequest) returns (CashCollectionLimitQueryResponse);
  rpc UpdateCashCollectionLimit(CashCollectionLimit) returns (CashCollectionLimitUpdateResponse);
  rpc CreateCashCollectionLimit(CashCollectionLimit) returns (CashCollectionLimit);
}