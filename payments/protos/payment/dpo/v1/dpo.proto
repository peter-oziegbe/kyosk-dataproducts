syntax = "proto3";
package payment.dpo.v1;

enum Status{

    // Transaction initiated via DPO
    // This is the default
    INITIATED = 0;
    // Transcation ongoing on DPO side
    PENDING = 1;
    // Transaction is in our DPO account
    SUCCESSFUL = 2;
    // Transcation failed between DPO and Client
    FAILED = 3;
}

message DPOTransaction{
    // Unique ID in our system (DPO svc)
    string id = 1;
    // Our unique Payment Request ID from the payment broker
    string payment_request_id = 2;
    // Transction Origin ISO country Code e.g. KE 
    string country_code = 3;
    // Two letter currency denotation of the transaction
    string currency = 4;
    // Transaction Amount
    int32 amount = 5;
    // Transaction status on our system
    Status status = 6;
    // Token issued to initiate/retry transactions against the DPO system
    string transaction_token = 7;
    // Transcation Code generated on DPO system for each transcation
    string transaction_reference = 8;
    // ID of the MNO used to process the transaction
    string payment_option_id = 9;
    // Name of the MNO
    string mno = 10;
    // Link to MNO's logo
    string logo = 11;
}

// Request payload to check status of a transaction for specific payment request
message FetchTransactionStatusRequest{
    DPOTransaction payment_request_id = 2;
}

// Response payload for status of a transaction
message TransactionStatusResponse{
    string id = 1;
    string payment_request_id = 2;
    string country_code = 3;
    string currency = 4;
    int32 amount = 5;
    Status status = 6;
    string transaction_token = 7;
    string transaction_reference = 8;
    string payment_option_id = 9;
    string mno = 10;
    string logo = 11;
}

// Service Logic
service TransactionStatusService {
    rpc FetchTransactionStatus(FetchTransactionStatusRequest) returns (TransactionStatusResponse) {}
  }
