syntax = "proto3";
package payment_integrations.sevi.v1;

import "payment_integrations/sevi/v1/sevi_payments.proto";
import "common/shared/v1/shared.proto";

message FetchCustomerStatusReq{
  string company_name = 1;
  string name = 2;
  string phone_number = 3;
}

message FetchCustomerStatusResp{
  string customer_id = 1;
  string sevi_status = 2;
  string kyosk_status = 3;
  double sevi_limit = 4;
  string message = 5;
}

message FetchPaymentProposalReq{
  string phone_number = 1;
  string sevi_customer_id = 2;
  common.shared.v1.Currency currency = 3;
  string territory = 5;
  common.shared.v1.CountryCode country_code = 6;
  string first_name = 7;
  string last_name =8;
  repeated Item items = 9;
}

message FetchPaymentProposalResp{
  repeated PaymentProposal payment_proposal = 1;
}

message OrderPaymentReq{
  string phone_number =  1;
  string sevi_customer_id = 2;
  common.shared.v1.Currency currency = 3;
  string territory = 4;
  string payment_request_id = 5;
  common.shared.v1.CountryCode country_code = 6;
  string customer_first_name = 7;
  string customer_last_name = 8;
  repeated Item items = 9;
  string sales_order_code = 10;
}

message OrderPaymentResp{
  string phone_number =  1;
  string sevi_customer_id = 2;
  common.shared.v1.Currency currency = 3;
  string territory = 4;
  string payment_request_id = 5;
  common.shared.v1.CountryCode country_code = 6;
  string customer_first_name = 7;
  string customer_last_name = 8;
  repeated Item items = 9;
  string status = 10;
  string id = 11;
}

message PostTransactionReq{
  string id = 1;
  double amount = 2;
  double fee = 3;
  double total_amount = 4;
  string method = 5;
  string transaction_type = 6;
  string payment_type = 7;
  string payment_type_id = 8;
  string wallet_id = 9;
  string description = 10;
  string currency = 11;
  double balance_before = 12;
  double balance_after = 13;
  string order_id = 14;
}

message PostTransactionResp{
  string status = 1;
}

service SeviService{
  rpc FetchCustomerStatus(FetchCustomerStatusReq) returns (FetchCustomerStatusResp) {}
  rpc FetchPaymentProposals(FetchPaymentProposalReq) returns (FetchPaymentProposalResp) {}
  rpc OrderPayment(OrderPaymentReq) returns (OrderPaymentResp) {}
  rpc PostTransaction(PostTransactionReq) returns (PostTransactionResp) {}
}