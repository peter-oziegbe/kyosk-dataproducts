syntax = "proto3";
package payment_integrations.mpesa.v1;
import "common/general/v1/async.proto";
import "payments/payout/v1/payout.proto";
import "google/protobuf/timestamp.proto";
import "common/shared/v1/shared.proto";
import "common/audit/v1/audit.proto";
import "common/query/v1/query.proto";

// Initiate payout transaction
message B2CTransactionCmd {

  // Unique id for persistence
  string id = 1;

  // User phone number
  string msisdn = 3;

  // Disbursement amount
  double amount = 5;

  // Transaction narration
  string narration = 7;

  // Inter-service unique reference
  string payment_reference = 8;

  // Client reply details
  common.general.v1.AsyncReply reply_to = 9;

  // Disbursement type
  payments.payout.v1.DisbursementType disbursement_type = 10;

  // Country
  common.shared.v1.CountryCode country = 13;

  // Currency
  common.shared.v1.Currency currency = 14;
}

// Initiate payout transaction response
message B2CTransactionResponse {
  string id = 1;
  int32 amount = 2;
  B2CStatus status = 3;
  string payment_reference = 4;
  string message = 5;
}

// Used to handle b2cTransaction QueryRequest
message B2CTransactionQueryResponse {
  repeated B2CTransaction transactions = 1;
  int64 total_count = 2;
}

enum B2CStatus {

   // Received and process initiated
   B2C_PROCESSING = 0;
   // Success response from safaricom and money disbursed
   B2C_CREDITED = 1;
   // The process timed out
   B2C_EXPIRED = 2;
   // The transaction was cancelled
   B2C_CANCELLED = 3;
}

// The B2C transaction record
message B2CTransaction {

  // Unique id for the transaction
  string id = 1;
  // Country
  common.shared.v1.CountryCode country = 3;
  // Currency
  common.shared.v1.Currency currency = 4;
  // Disbursement amount
  double amount = 5;
  // Receiver phone number
  string msisdn = 6;
  // Type of disbursement
  payments.payout.v1.DisbursementType disbursement_type = 7;
  // Narration
  string narration = 8;
  // Inter-service reference
  string payment_reference = 9;
  // Transaction details
  TransactionInfo transaction_info = 10;
  // Audit
  common.audit.v1.Audit audit_info = 11;
}

// Transaction details
message TransactionInfo {
  // transaction reference
  string mpesa_code = 1;
  // Kyosk transaction time
  google.protobuf.Timestamp transaction_time = 2;
  // Kyosk transaction message
  string transaction_message = 3;
  // Status
  B2CStatus status = 4;
  // unique id for saf to track conversations
  string conversation_id = 5;
  // unique id sent from Kyosk to saf
  string originator_conversation_id = 6;
  // Success or error codes
  string saf_response_code = 7;
  // success response description or error messages
  string saf_response_description = 8;
  // Safaricom timestamp in string format
  string saf_timestamp = 9;
}

service B2CTransactionService {
  rpc InitiateB2cPayment(B2CTransactionCmd) returns (B2CTransactionResponse);
  rpc Query(common.query.v1.QueryRequest) returns(B2CTransactionQueryResponse); // In case of polling
}