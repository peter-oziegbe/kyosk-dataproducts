syntax = "proto3";
package payment_integrations.mtn.v1;
import "common/query/v1/query.proto";
import "mtn.proto";
import "google/protobuf/timestamp.proto";
import "payments/payment_request/v1/payment_request.proto";

/**
  * The Mtn Svc definition (bff-> mtn-> wallet-> kafka).
 */

//mtn message request to pay intialisation from BFF
message MtnRequestToPayPayload {
  // unique id for the STK push
  string id = 1;
  // PR that initiated it
  string payment_request_id = 3;
  //Kyosk Customer ID
  WalletDef credit_to = 5;
  //The phone number used to make a payment
  int64 msisdn = 7;
  //The transaction amount
  double amount = 10;
  //transaction_status
  MtnStatusPayload status = 12;
  // ref, could be DN, SI or payment request that customer is paying for
  string payment_reference = 13;
  //purpose for that Mtn Payment i.e DN or CREDIT_REPAYMENT
  payments.payment_request.v1.PaymentPurpose payment_purpose = 15;
}



//mtn message request to pay status request from BFF
message MtnStatusRequestPayload {
  // financial_transaction_id id for the mtn request to pay
  string id = 1;
  // PR that initiated it
  string payment_request_id = 3;

}
//mtn wallet definition
message WalletDef{
  // This is a the users ID
  string user_id = 1;

  string wallet_name = 2;
}


//mtn request to pay status
enum MtnStatusPayload{
  PENDING = 0;
  SUCCESSFUL = 1;
  FAILED = 2;
}





//payer information
message Payer{
  string party_id_type = 1;
  string party_id = 2;
}

//message Request to pay Status response from MTN
message RequestToPayStatusResponse{
  string financial_transaction_id = 1;
  string external_id = 2;
  double amount = 3;
  string currency = 4;
  Payer payer = 5;
  string payer_message = 6;
  string payee_note = 7;
  MtnStatusPayload status = 8;
  string id = 9;
}

message MtnPayload {
  // unique id for mtn
  string id = 1;
  // PR that initiated it
  string payment_request_id = 2;
  //Kyosk Customer ID
  WalletDef credit_to = 3;
  //The phone number used to make a payment
  int64 msisdn = 4;
  //The transaction amount
  double amount = 5;
  //mtn status
  MtnStatusPayload momo_status = 6;
  // transaction_status
  MtnStatus mtn_status = 7;

  // ref, could be DN, SI or payment request that customer is paying for
  string payment_reference = 8;

  //Time when mtn  was initiated.
  google.protobuf.Timestamp initiation_time = 9;

  // Time when mtn message arrived on our system from mtn
  google.protobuf.Timestamp mtn_msg_arrival_time = 10;
  //Time taken to complete transaction
  google.protobuf.Timestamp completion_time = 11;

  //The mtn code (transaction reference)
  string mtn_code = 12;
}


/**
  * The Mtn (svc 2 svc) Service definition.
 */
service MtnService {
  //  request to pay intialization
  rpc RequestToPay(MtnRequestToPayPayload) returns (RequestToPayStatusResponse);
  //  request to pay status (check transaction status)
  rpc RequestToPayStatus(common.query.v1.QueryRequest) returns (RequestToPayStatusResponse);

}

