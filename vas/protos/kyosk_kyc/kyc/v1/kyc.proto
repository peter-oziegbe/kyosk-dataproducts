syntax = "proto3";

package kyosk_kyc.kyc.v1;

enum Gender {
  MALE = 0;
  FEMALE = 1;
}

enum EmploymentStatus {
  EMPLOYED = 0;
  SELF_EMPLOYED = 1;
}

enum KycStatus {
  VERIFIED = 0;
  IN_PROGRESS = 1;
  INCOMPLETE = 2;
  FAILED_VERIFICATION = 3;
}

enum ServiceName {
  KYOSK_CREDIT_INTERNAL_BASIC = 0;
  KYOSK_CREDIT_INTERNAL_ADVANCED = 1;
  SEVI = 2;
  PEZESHA = 3;
  MTEK = 4;
  NDOVU = 5;
  BNPL = 6;
  AGENCY_BANKING = 7;
}

message Location {
  float longitude = 1;
  float latitude = 2;
}

message NextOfKinDetail {
  string first_name = 1;
  string last_name = 2;
  string relationship = 3;
  string phone_number = 4;
}

message KycData {
  string retailer_id = 1;
  string first_name = 2;
  string last_name = 3;
  string owner_phone_number = 4;
  Location store_location = 5;
  string kyosk_territory = 6;
  string country = 7;
  string date_of_birth = 8;
  Gender gender = 9;
  string id_number = 10;
  bytes id_image = 11; 
  string kra_pin_number = 12;
  bytes kra_pin_image = 13; 
  repeated NextOfKinDetail next_of_kin_details = 14;
  string source_of_money = 15;
  EmploymentStatus employment_status = 16;
  ServiceName service_name = 17; 
}

message ErrorDetail {
  string parameter = 1;
  string issue = 2;
}

message Error {
  string code = 1;
  string message = 2;
  repeated ErrorDetail details = 3;
}

message KycResponse {
  bool success = 1;
  string code = 2;
  string message = 3;
  KycStatus kyc_status = 4;
  KycData details = 5;
  repeated Error errors = 6;
}

service Kyc {
  rpc StoreKycDetails(KycData) returns (KycResponse) {}
  rpc UpdateKycDetails(KycData) returns (KycResponse) {}
  rpc GetKycDetails(GetKycDetailsRequest) returns (KycResponse) {}
}

message GetKycDetailsRequest {
  string retailer_id = 1;
}
