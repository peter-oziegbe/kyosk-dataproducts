syntax = "proto3";

import "google/type/date.proto";
import "google/protobuf/timestamp.proto";
import "common/audit/v1/audit.proto";
import "kyosk_kyc/kyc/v2/kyc.proto";
import "pagination/cursor_based/v1/cursor_based_pagination.proto";
package credit.pezesha.v1;


enum LoanOfferStatus {
  LOAN_OFFER_STATUS_UNSPECIFIED = 0;
  GIVEN = 1;
  NOT_GIVEN = 2;
}

enum LoanApplicationStatus {
  LOAN_APPLICATION_STATUS_UNSPECIFIED = 0;
  APPROVED = 1;
  REJECTED = 2;
  ERROR_OCCURRED = 3;

}
enum ApplicationStatus {
  LOAN_PROCESSING = 0;
  PEZESHA_REQUEST_SENT = 1;
  WALLET_DETAILS_FETCHED = 2;
  WALLET_BOOKING_REQUEST_SENT = 3;
  WALLET_BOOKING_STATUS_CONSUMED = 4;
  CUSTOMER_CREDIT_DETAILS_SENT = 5;
  SETTLEMENT_REPLY_SENT = 6;
}

enum PezeshaLoanApplicationStatus {
  PEZESHA_LOAN_APPLICATION_STATUS_UNSPECIFIED = 0;
  PROCESSING = 1;
  SCORE = 2;
  FUNDING = 3;
  FUNDED = 4;
  PAID = 5;
  CANCELLED = 6;
  LATE = 7;
}

message CreateLoanApplicationInput {
  string retailer_id = 1;
  double loan_amount = 2;
  string sale_order_number=3;
}

message Loan {
  string id = 1;
  double credit_amount_due = 2;
  double service_fee = 3;
  double late_fee_due = 4;
  google.protobuf.Timestamp date_disbursed = 5;
  google.protobuf.Timestamp due_date = 6;
  double total_amount_expected = 7;
  double amount_due = 8;
  double amount_repaid = 9;
}

message Error {
  string parameter = 1;
  string issue = 2;
}

message CreditLimitDetails {
  string retailer_id = 1;
  double credit_limit = 2;
  int32 loan_duration = 3;
  double interest_rate = 4;
  double interest_amount = 5;
  double service_fee = 6;
}

message LoanApplicationData {
  bool success = 1;
  string message = 2;
  LoanApplicationStatus loan_application_status = 3;
  repeated Error errors = 4;
  string loan_id=5;
}

message CreditLimitData {
  bool success = 1;
  string message = 2;
  LoanOfferStatus loan_offer_status = 3;
  PezeshaLoanApplicationStatus loan_application_status = 4;
  CreditLimitDetails credit_limit_details = 5;
  repeated Loan active_loans = 6;
  repeated Error errors = 7;
}

message PezeshaCreditTransaction {
  string retailer_id = 1;
  string loan_id = 2;
  string sale_order_number = 3;
  int64 credit_amount = 4;
  int64 service_fee = 5;
  int64 late_fee = 6;
  google.protobuf.Timestamp disbursement_date = 7 [deprecated=true];
  google.protobuf.Timestamp due_date = 8 [deprecated=true];
  int64 total_amount_due = 9;
  int64 total_amount_paid = 10;
  PezeshaLoanApplicationStatus loan_status = 11;
  string object_id = 12;
  pagination.cursor_based.v1.CursorBasedPaginationInfo cursor_based_pagination_info = 13 [deprecated=true];
  string disbursement_timestamp = 14;
  string due_date_timestamp = 15;
}

message PezeshaCreditTransactionData {
  repeated PezeshaCreditTransaction transactions = 1;
  bool success = 2;
  string message = 3;
  pagination.cursor_based.v1.CursorBasedPaginationInfo cursor_based_pagination_info = 4;
}


message GetCreditLimitDetailsRequest {
  string retailer_id = 1;
}
message PezeshaKYCResponse {
  bool success = 1;
  string message = 2;
  kyosk_kyc.kyc.v2.KYCStatus kyc_status = 3;
  PezeshaKYCDataOutput details = 4;
  repeated Error errors = 5;
}
message PezeshaKYCDataOutput {
  string retailer_id = 1;
  string kyc_id = 2;
  string first_name = 3;
  string last_name = 4;
  string owner_phone_number = 5;
  kyosk_kyc.kyc.v2.StoreLocation store_location = 6;
  string kyosk_territory = 7;
  string country = 8;
  string date_of_birth = 9;
  kyosk_kyc.kyc.v2.Gender gender = 10;
  kyosk_kyc.kyc.v2.IDType id_type = 11;
  string id_number = 12;
  string id_image_url = 13;
  string tax_pin = 14;
  string tax_image_url = 15;
  kyosk_kyc.kyc.v2.NextOfKinDetail next_of_kin_details = 16;
  string source_of_money = 17;
  kyosk_kyc.kyc.v2.EmploymentStatus employment_status = 18;
  string nationality = 19;
  string residential_status = 20;
  string verified_services = 21;
  string selfie = 22;
  string id_image_url_back = 23;
  bool enhanced_kyc = 24;
  string business_permit_attachment = 25;
  google.type.Date date_created = 26;
  kyosk_kyc.kyc.v2.KYCStatus kyc_status = 27;
  google.type.Date date_updated = 28;
  string narration = 29;
  common.audit.v1.Audit audit = 30;
  string county = 31;
  string sub_county = 32;
  google.protobuf.Timestamp time_updated = 33;
  google.protobuf.Timestamp time_created = 34;
  kyosk_kyc.kyc.v2.ServiceName service_name = 35;
  string user_id = 36;
  PezeshaUserResponse pezesha_user_response = 37;
  PezeshaLoanStatusResponse pezesha_loan_status_response = 38;
  PezeshaLoanApplicationResponse pezesha_loan_application_response = 39;
  PezeshaLoanOfferResponse pezesha_loan_offer_response = 40;

}
message PezeshaLoanOfferResponse{
  int32 status = 1;
  int32 response_code = 2;
  bool error = 3;
  string message = 4;
  LoanOfferData loan_offer_data = 5;
}
message LoanOfferData{
  double amount = 1;
  int32 rate = 2;
  int32 fee = 3;
  int32 duration = 4;
  double interest = 5;

}
message PezeshaUserResponse{
  bool error = 1;
  int32 status = 2;
  string response_code = 3;
  string message = 4;
  PezeshaUserResponseData data = 5;
}
message PezeshaUserResponseData{
  string customer_id = 1;
  string customer_names = 2;
  string customer_identification = 3;
  string customer_phoneno = 4;
  string merchant_id = 5;
}
message PezeshaLoanStatusResponse{
  int32 status = 1;
  int32 response_code = 2;
  bool error = 3;
  string message = 4;
  PezeshaLoanStatusData data = 5;
}

message UserRegistrationStatusResponse{
 bool success=1;
  int32 response_code = 2;
  bool error = 3;
  string message = 4;
}
message GetWalletBookingStatusResponse{
  bool success=1;
  bool error = 2;
  string message = 3;
}
message PezeshaLoanStatusData{
  string loan_id = 1;
  string order_id = 2;
  int32 customer_id = 3;
  string channel = 4;
  double loan_amount = 5;
  int64 sp_fee = 6;
  int64 pz_fee = 7;
  double total_amount = 8;
  double interest_amount = 9;
  double interest = 10;
  string status = 11;
  string application_date = 12;
  string funded_time = 13;
  string due_date = 14;
  PezeshaLoanBalance balance = 15;
}

message PezeshaLoanBalance{
  double principal = 1;
  double interest = 2;
  double penalty = 3;
  double service_fee = 4;
  double handling_fee = 5;
  string loan_status = 6;
  string waived_amount = 7;
  string bank_service_fee = 8;
  double principal_balance = 9;
  double interest_balance = 10;
  double handling_fee_balance = 11;
  string loan_approval_principal = 12;
  string loan_approval_app_interest_value = 13;
  string loan_approval_app_service_value = 14 ;
  string loan_approval_app_penalty_value = 15;
  string loan_approval_waived_amount = 16;
  string last_transaction_amount = 17;
  string last_transaction_time = 18;
  double penalty_balance = 19;
  double repayed_amount = 20;
  double to_repay = 21;
  double loan_type = 22;
  double loan_balance_value_v2 = 23;
}

message  PezeshaLoanApplicationResponse{
  int64 status = 1;
  int64 response_code = 2;
  bool error = 3;
  string message = 4;
  string loan_id=5;
  string retailer_id=6;
  string loan_duration=7;
  string loan_amount=8;
  ApplicationStatus loan_status=9;
}

message GetPezeshaCreditTransactionsRequest {
  int32 first = 1;
  string after = 2;
  string retailer_id = 3;
  string before = 4 ;
}

message GetWalletDetailsResponse {
      bool success=1;
      string message=2;
      repeated WalletOutput wallets = 3;
      repeated Error errors=4;
    }
message WalletOutput{
   string id=1;
   string name=2;
   double actual_balance=3;
   double available_balance=4;
   string wallet_owner_id=5;
   bool can_overdraw=6;
   string country_code=7;
   string currency=8;
   string owner_type=9;
   string email=10;
    }

message GetWalletDetailsRequest {
  string retailer_id = 1;
}

message GetLoanApplicationStatusInput {
  string retailer_id = 1;
  string loan_id = 2;
  string user_id = 3;
  string payment_request_id=4;
  string territory_id=5;
}
message GetUserRegistrationStatusInput {
  string retailer_id = 1;
  string user_id = 2;
}
message GetWalletBookingStatusInput {
  string payment_request_id = 1;

}
message LoanDisbursementInput {
  string mpesa_code = 1;
  string loan_id = 2;
  string disbursement_date = 3;
  string transaction_time=4;
  string amount_disbursed=5;
  string callback_type=6;
}

message LoanRepaymentInput {
  string disbursement_date = 1;
  string loan_duedate = 2;
  string loan_status = 3;
  string loan_amount=4;
  string amount_balance=5;
  string loan_id=6;
  int32 overdue_days=7;
  string callback_type=8;
}

message CallBackResponse {
  string response_code = 1;
  string response_desc = 2;
}

message WalletBookingRequest{

  string id = 1;
  // is nullable
  string payment_request_id = 2;

  // This refrences the actual transaction document
  string transaction_reference = 3;


  // This is the wallet to deposit money into
  string wallet_to_cr = 4;

  //this is the wallet to remove money from
  string wallet_to_dr = 5;

  string territory_id = 6;

  // This is the payment channel used. could be any of Mpesa,Flutterwave,Cash ETC
  string payment_channel = 7;

  // Country of the transaction
  string country_code = 8;

  // Currency of the amount used in this transaction
  string currency = 9;

  // This is the amount to add/remove
  double amount = 10;

  string narration = 11;

  // Liens block any future debits from an account until this request is fullfilled. A lien does not terminate immediately
  bool impose_lien = 12;

  // This would default to 999. The lower the priority the earlier it will be handled. Liens overtake non lien priorities
  // prioritization Feature not implemented yet
  int32 priority = 13;

 AsyncReply reply_to = 14;

  AsyncReply settlement_reply_to = 15;

  string created_by = 16;

  // some transactions do not need, have equivalent actions done by ERPNext or do have equivalent ERPNext trs
  bool should_create_erp_journal_entry = 17;
  // This will be passed by PR_svc when booking
  string customer_erp_id = 18;
  // entry type to determine what accounts the creation service will use
  string delivery_note_id = 19;
  // to be sent to PE creation svc
  // must not be empty for credit, refund JEs for calls that have these operations specified
  string party_to_credit = 20;
  // must not be empty for customer to customer refund JEs for calls that have these operations specified
  string party_to_debit = 21;
}
message AsyncReply{

  // Upon successful booking where to send the response. signal via tempral
  ReplyChannel reply_channel = 57;

  string reply_kafka_topic = 58;

  // This refrence is the identifier for the particular channel.  For temporal its the worflow id;
  string reply_workflow_id = 60;

  // this is only for when signaling back via temporal
  string signal_method = 62;

}
enum ReplyChannel{
  TEMPORAL = 0;
  KAFKA = 1;
}

message BookingResponse{
  string booking_id = 1;
}


service PezeshaService {
  rpc StoreKYCDetails(kyosk_kyc.kyc.v2.KYCDataInput) returns (PezeshaKYCResponse) {}
  rpc GetKYCDetails(kyosk_kyc.kyc.v2.GetKYCDetailsRequest) returns (PezeshaKYCResponse) {}
  rpc GetKYCDetailsPhoneNumber(kyosk_kyc.kyc.v2.GetKYCDetailsRequest) returns (PezeshaKYCResponse) {}
  rpc GetKYCDetailsByPhoneNumber(kyosk_kyc.kyc.v2.GetKYCDetailsPhoneNumberRequest) returns (PezeshaKYCResponse) {}
  rpc UpdateEnhancedKYCDetails(kyosk_kyc.kyc.v2.UpdateEnhancedKYCDetailsRequest) returns (PezeshaKYCResponse) {}
  rpc GetCreditLimitDetails(GetCreditLimitDetailsRequest) returns (CreditLimitData);
  rpc CreateLoanApplication(CreateLoanApplicationInput) returns (LoanApplicationData);
  rpc GetPezeshaCreditTransactions(GetPezeshaCreditTransactionsRequest) returns (PezeshaCreditTransactionData);
  rpc GetWalletDetails(GetWalletDetailsRequest) returns (GetWalletDetailsResponse);
  rpc GetLoanStatus(GetLoanApplicationStatusInput) returns (PezeshaLoanStatusResponse);
  rpc BookWallet(WalletBookingRequest) returns (BookingResponse);
  rpc ProcessPaymentCallBack(LoanRepaymentInput) returns (CallBackResponse);
  rpc ProcessDisbursementCallBack(LoanDisbursementInput) returns (CallBackResponse);
  rpc GetUserRegistrationStatus(GetUserRegistrationStatusInput) returns (UserRegistrationStatusResponse);
  rpc GetWalletBookingStatus(GetWalletBookingStatusInput) returns (GetWalletBookingStatusResponse);
}

