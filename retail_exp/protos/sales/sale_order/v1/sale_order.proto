syntax = "proto3";

package sales.sale_order.v1;
import "google/protobuf/timestamp.proto";
import "sales/delivery_window/v1/delivery_window.proto";

message InventoryItem{
  string inventory_item_id = 5;
  int32 inventory_item_qty = 6;
}


//Represents an order item
message OrderCatalogItem{
  int32  quantity = 1;
  string catalog_item_id = 2;
  int32 catalog_item_qty = 3;
  InventoryItem inventory_item = 4;
  double  selling_price = 8;
  double  discount_amount = 10;
}

// Represents a sale order status
enum  OrderStatus {
  SUBMITTED = 0;
  EXPIRED = 1;
  USER_CANCELLED = 2;
  COMPLETED = 3;
  DELIVERED = 4;
  DISPATCHED = 5;
  //Deprecated
  SOLD_ON_CREDIT = 6;
  PROCESSING = 7;
  PUBLISHED = 8;
  CANCELLED = 9;

}

// Represents a Sale order
message SaleOrder{
  // Id
  string id = 1;
  // Sale order unique code
  string  sale_order_code = 2;
  // Sale order Items
  repeated  OrderCatalogItem items = 3;
  // Id of outlet making the sale order.
  string outlet_id = 4;
  // Id of retailer making the sale order.
  string retailer_id = 5;
  //cart id
  string cart_id = 6;
  // Territory name
  string territory_id = 7;
  // Territory warehouse the sale order is
  string warehouse_id = 10;
  // Sale order amount currency
  string  currency = 11;
  //Country the sale order has been made
  string country = 12 ;
  // Sale order amount before discount
  double  sale_order_amount = 13;
  // Total discount applied to sale order
  double  sale_order_discount = 14;
  // Sale order total after discount
  double  sale_order_total = 15;
  // App the sale order was created
  string created_on_app = 16;
  // User that created sale order
  // Sale order status
  OrderStatus order_status = 17;
  string sale_order_creator = 18;
  // Delivery window id
  sales.delivery_window.v1.DeliveryWindow delivery_window = 19;
  // Time sale order was created
  google.protobuf.Timestamp created_at = 20;
  // Id of user that updated this route
  string updated_by = 21;
  // Time this sale order  was updated
  google.protobuf.Timestamp updated_at = 22;
  // Indicates if order was sold of credit
  bool is_credit_sale = 23;
  // Indicates if order is pre karuru
  bool is_pre_karuru = 24;

}


message CreateSaleOrderRequest {

  // Id of outlet making the sale order.
  string outlet_id = 1;
  // Id of retailer making the sale order.
  string retailer_id = 2;
  // Territory name
  string territory_id = 3;
  // Territory warehouse the sale order is
  double  sale_order_amount = 4;
  // Total discount applied to sale order
  double  sale_order_discount = 5;
  // Sale order total after discount
  double  sale_order_total = 6;
  // App the sale order was created
  string created_on_app = 7;
  // Delivery window id
  sales.delivery_window.v1.DeliveryWindow delivery_window = 8;
  // Sale order Items
  repeated  OrderCatalogItem items = 9;
  //Checked out cart id
  string cart_id = 10;


}
message FetchSaleOrdersRequest{
  string order_id = 1;
  string owner_msisdn = 2;
  string outlet_id = 3;
  string territory_id = 4;
  repeated string route_ids = 5;
  //Date Range filters
  string start_date = 6 ;
  string end_date = 7;
}
message FetchSaleOrdersResponse {
  string message = 1;
  int32  response_code = 2;
  repeated SaleOrder orders = 3;
}
message CancelOrderRequest{
  //Reason for order cancellation
  string reason_id = 1;
  // order id
  string order_id = 2;
}

service SaleOrderService {
  rpc CreateSaleOrder(CreateSaleOrderRequest) returns  (SaleOrder){}
  rpc FetchSaleOrders(FetchSaleOrdersRequest) returns  (FetchSaleOrdersResponse){}
  rpc CancelSaleOrder(CancelOrderRequest) returns  (SaleOrder){}

}
