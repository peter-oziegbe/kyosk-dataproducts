syntax = "proto3";

package sales.sale_order.v1;

import "sales/sale_order/v1/sale_order.proto";

message Item {
  string item_code = 1;
  int32 quantity_ordered = 2;
}

message SaleOrderTestRequest {
  //No. of sale orders to generate. Default = 1
  int32 number_of_sale_orders = 1;
  //Territory to which the sale order will belong. Default = random territory
  string territory_code = 2;
  //Where the sale order has been created from. i.e. either 'Duka App' or 'Agent PWA'
  //Default = 'Agent PWA'
  string creator_source = 3;
  //Id of market developer or retailer who created the sale order
  //Default = a random creator
  //NB: If left out, then we assume your test case does not need a valid creator (agent or retailer)
  string sale_order_creator_id = 4;
  //The outlet/shop that created the sale order. Default = a random outlet id
  //NB: If left out, then we assume your test case does not need a valid creator (agent or retailer)
  string outlet_id = 5;
  //If number is not specified, return 1
  repeated Item items = 6;
  SaleOrder.OrderStatus sale_order_status = 7;
  //If territory is not specified, return a random delivery window for any territory
  string delivery_window = 8;
}

message SaleOrderTestResponse{
  repeated SaleOrder sale_orders = 1;
}

service SaleOrderTestService{
  rpc GetTestSaleOrders (SaleOrderTestRequest) returns (SaleOrderTestResponse);
}