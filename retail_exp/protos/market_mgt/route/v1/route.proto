syntax = "proto3";

package market_mgt.route.v1;

import "google/protobuf/timestamp.proto";

// Represents a route
message Route{

  // Route unique id
  string route_id = 1;
  // Route assigned code
  string route_code = 2;
  // Route assigned name
  string route_name = 3;
  // Sales district id
  string sale_district_id = 4;
  // FK id representing the  Territory
  string territory_id = 5;
  // Boundary assigned to route
  string boundary = 6;
  // Time this route was created
  google.protobuf.Timestamp created_at = 7;
  // Id of user that updated this route
  string updated_by = 8;
  // Time this route  was updated
  google.protobuf.Timestamp updated_at = 9;
  //Market Developer Details
  MarketDeveloper market_developer = 10;
}

//Market developer object
message MarketDeveloper {
  string name = 1;
  string login = 2;
  string msisdn = 3;
}

//Payload to post a Route
message PostRouteRequest{

  // Route unique id
  string route_id = 1;
  // Route assigned code
  string route_code = 2;
  // Route assigned name
  string route_name = 3;
  // Sales district id
  string sale_district_id = 4;
  // FK id representing the  Territory
  string territory_id = 5;
  // Boundary assigned to route
  string boundary = 6;
  // Market developer
  MarketDeveloper market_developer = 7;
}

//Response from PostRouteRequest
message PostRouteResponse {
  int32 response_code = 1;
  string message = 2;
  Route data = 3;
}

//Payload to fetch Route
message GetRouteRequest{
  string id = 1;
  string code = 2;
  string territory_id = 3;
}
//Response from GetRouteRequest
message GetRouteResponse {
  int32 response_code = 1;
  string message = 2;
  repeated Route data = 3;
}

//Delete route request
message DeleteRouteRequest{
  //Sale district id
  string  id = 1;
}
//Delete route response
message DeleteRouteResponse{
  int32 response_code = 1;
  string message = 2;
}
service RouteService{
  rpc PostRoute(PostRouteRequest) returns (PostRouteResponse){};
  rpc GetRoute(GetRouteRequest) returns (GetRouteResponse){};
  rpc UpdateRoute(PostRouteRequest) returns (PostRouteResponse){};
  rpc DeleteRoute(DeleteRouteRequest) returns (DeleteRouteResponse) {}


}