syntax = "proto3";

package setup.territory.v1;

message Territory {
  //unique identifier of territory in ERPNext
  string id = 1;
  //Name of the territory. Is unique
  string territory_name = 2;
  //unique code for the territory
  string territory_code = 3;
  //Polygon boundary for the territory. A combination of lat-longs
  string territory_boundary = 4;
  //Id of country to which the territory belongs
  string country_id = 5;
  //Code of country to which the territory belongs
  string country_code = 6;
  //The type of the territory
  // (currently, the accepted values are: MARKET, REGION, COUNTRY, GLOBAL, SALE_DISTRICT)
  // This was not created as an enum because it's a user-created field (i.e. entries are user-populated),
  // hence its values can change
  string territory_type = 7;
  // Whether the territory is enabled or not
  bool disabled = 8;
}

//Payload to fetch a territory
message GetTerritoryRequest {
  //unique identifier of territory in ERPNext
  string id = 1;
}

//Response to the GetTerritoryRequest
message GetTerritoryResponse {
  int32 response_code = 1;
  string message = 2;
  Territory data = 3;
}

// Payload to filter Territories
message FilterTerritoryRequest {
  //Filter by disabled status
  bool disabled = 1;
  //Name of the territory. Is also unique
  string territory_name = 2;
  //The type of the territory
  string territory_type = 3;
  //unique code for the territory
  string territory_code = 4;
  //Filter by country
  string country_id = 5;
}

//Response to FilterTerritoryRequest
message FilterTerritoryResponse {
  int32 response_code = 1;
  string message = 2;
  repeated Territory data = 3;
}

//Service Definition
service TerritoryService {
  rpc GetTerritory(GetTerritoryRequest) returns (GetTerritoryResponse) {}
  rpc FilterTerritory(FilterTerritoryRequest) returns (FilterTerritoryResponse) {}
}