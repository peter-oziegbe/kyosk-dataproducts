syntax = "proto3";
package target_allocation.v1;

import "google/protobuf/timestamp.proto";
import "common/query/v1/query.proto";
import "sourcing/v1/farm_common.proto";
import "target_allocation/v1/target.proto";


message TargetAllocationRequest {
  string purchase_order_no = 2;
  sourcing.v1.SourcingAccount assigned_by = 3;
  sourcing.v1.ProduceAccount product = 6;
  double target_amount = 7;
  double target_quantity = 8;
  sourcing.v1.RegionRequest region = 12;
  google.protobuf.Timestamp start_target_date = 13;
  google.protobuf.Timestamp end_target_date = 14;
}


message AgentTargetAllocationRequest {
  string purchase_order_no = 2;
  sourcing.v1.SourcingAccount assigned_by = 3;
  sourcing.v1.SourcingAccount assigned_to = 4;
  sourcing.v1.ProduceAccount product = 6;
  double target_amount = 7;
  double target_quantity = 8;
  google.protobuf.Timestamp start_target_date = 13;
  google.protobuf.Timestamp end_target_date = 14;
}

message UpdateAgentTargetAllocationRequest {
  string id = 1;
  sourcing.v1.SourcingAccount assigned_to = 2;
  sourcing.v1.ProduceAccount product = 3;
  double target_quantity = 4;
  google.protobuf.Timestamp end_target_date = 5;
}

message TargetAllocationResponse {
  string code = 1;
  string message = 2;
  Target target = 3;
}

message AgentTargetAllocationResponse {
  string code = 1;
  string message = 2;
  AgentTarget target = 3;
}

message TargetAllocationListResponse {
  string code = 1;
  string message = 2;
  repeated Target targets = 3;
}

message AgentTargetAllocationListResponse {
  string code = 1;
  string message = 2;
  repeated AgentTarget targets = 3;
}

message CompleteTargetRequest {
  string id = 1;
  sourcing.v1.Type agent_type = 2;
  TargetStatus status = 3;
}

service TargetAllocationService {
  rpc SetTarget(TargetAllocationRequest) returns (TargetAllocationResponse);
  rpc SetAgentTarget(AgentTargetAllocationRequest) returns (AgentTargetAllocationResponse);
  rpc UpdateAgentTarget(UpdateAgentTargetAllocationRequest) returns (AgentTargetAllocationResponse);
  rpc GetTargetList(common.query.v1.QueryRequest) returns (TargetAllocationListResponse);
  rpc GetAgentTargetList(common.query.v1.QueryRequest) returns (AgentTargetAllocationListResponse);
  rpc GetTargetStatus(common.query.v1.QueryRequest) returns (TargetAllocationResponse);
  rpc GetAgentTargetStatus(common.query.v1.QueryRequest) returns (AgentTargetAllocationResponse);
}