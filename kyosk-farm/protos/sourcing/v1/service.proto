syntax = "proto3";
package sourcing.v1;

import "sourcing/v1/farm_common.proto";
import "sourcing/v1/agent.proto";
import "google/protobuf/timestamp.proto";
import "sourcing/v1/produce.proto";
import "sourcing/v1/farmer.proto";
import "sourcing/v1/region.proto";
import "common/query/v1/query.proto";

message RegisterSourcingRequest{
  string id_number = 1;
  string phone_number = 2;
  string first_name = 3;
  google.protobuf.Timestamp date_of_birth = 4;
  Gender gender = 5;
  Country country = 6;
  RegionRequest region = 7;
  Type type = 8;
  Location store_location = 9;
  string last_name = 10;
}
message UpdateRegisterSourcingRequest{
  string id_number = 1;
  string phone_number = 2;
  string first_name = 3;
  google.protobuf.Timestamp date_of_birth = 4;
  Gender gender = 5;
  Country country = 6;
  RegionRequest region = 7;
  Type type = 8;
  Location store_location = 9;
  string last_name = 10;
  string id =11;
}

message SourcingResponse{
  string code = 1;
  string message = 2;
  Agent agent = 3;
}

message SourcingRequest{
  string id = 1;
  string name = 2;
}
message SourcingAgentsRequest{
  string region = 1;
  Type type = 2;
}
message SourcingAgentsResponse{
  string code = 1;
  string message = 2;
  repeated Agent agents = 3;
}

message RegisterFarmerRequest{
  string id_number = 1;
  string phone_number = 2;
  string first_name = 3;
  google.protobuf.Timestamp date_of_birth = 4;
  Gender gender = 5;
  string last_name = 6;
  SourcingRequest agent = 7;
  RegionRequest region = 8;
  repeated ProduceAccount produce = 9;
  Location store_location = 10;
  string kra_pin = 11;
}


message RegisterRegionRequest{
  string name =1;
}
message FarmerResponse{
  string code = 1;
  string message = 2;
  Farmer farmer = 3;
}

message FarmerListResponse{
  string code = 1;
  string message = 2;
  repeated Farmer farmers = 3;
}

message RegionsResponse{
  repeated Region region = 2;
}

message StoreLocationsResponse{
  Region region = 1;
  repeated Location store_location = 2;
}
message ProduceCategoriesResponse{
  repeated ProduceType produce_category = 2;
}

service SourcingService{

  //  agent management
  rpc RegisterSourcingAgent(RegisterSourcingRequest) returns (SourcingResponse);
  rpc UpdateAgentDetails(UpdateRegisterSourcingRequest) returns (SourcingResponse);
  rpc GetSourcingAgentStatus(common.query.v1.QueryRequest) returns (SourcingResponse);
  rpc DisableSourcingAgent(SourcingRequest) returns (SourcingResponse);
  rpc EnableSourcingAgent(SourcingRequest) returns (SourcingResponse);
  rpc GetSourcingAgents(common.query.v1.QueryRequest) returns (SourcingAgentsResponse);

  // farmer and produce management
  rpc RegisterFarmer(RegisterFarmerRequest) returns (FarmerResponse);
  rpc GetFarmerStatus(common.query.v1.QueryRequest) returns (FarmerResponse);
  rpc GetFarmers(common.query.v1.QueryRequest) returns (FarmerListResponse);


  // configurations from erp
  rpc RegisterRegion(RegisterRegionRequest)returns(Region);
  rpc GetRegions(common.query.v1.QueryRequest) returns (RegionsResponse);
  rpc GetSingleRegion(common.query.v1.QueryRequest) returns (Region);
  rpc GetProduceCategories(common.query.v1.QueryRequest) returns (ProduceCategoriesResponse);
  rpc GetSingleProduce(common.query.v1.QueryRequest) returns (ProduceType);
}