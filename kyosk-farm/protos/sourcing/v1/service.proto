syntax = "proto3";
package sourcing.v1;

import "sourcing/v1/farm_common.proto";
import "sourcing/v1/agent.proto";
import "google/protobuf/timestamp.proto";
import "sourcing/v1/produce.proto";
import "sourcing/v1/farmer.proto";
import "sourcing/v1/produce_collection.proto";
import "sourcing/v1/target.proto";
import "google/protobuf/empty.proto";
import "common/query/v1/query.proto";




message RegisterSourcingRequest{
  string id_number = 1;
  string phone_number = 2;
  string name = 3;
  google.protobuf.Timestamp date_of_birth = 4;
  Gender gender = 5;
  Country country = 6;
  string region = 7;
  Type type = 8;
  Location store_location = 9;
}


message SourcingResponse{
  string code = 1;
  string message = 2;
  Agent agent = 3;
}

message SourcingRequest{
  string id = 1;
  string name = 2;
}
message SourcingAgentsRequest{
  string region = 1;
  Type type = 2;
}
message SourcingAgentsResponse{
  string code = 1;
  string message = 2;
  repeated Agent agents = 3;
}

message RegisterFarmerRequest{
  string id_number = 1;
  string phone_number = 2;
  string name = 3;
  google.protobuf.Timestamp date_of_birth = 4;
  string gender = 5;
  SourcingRequest agent = 6;
  ProduceType produce_details = 7;
}
message FarmerResponse{
  string code = 1;
  string message = 2;
  Farmer farmer = 3;
  repeated Produce produce = 4;
}

message CollectionResponse{
  string code = 1;
  string message = 2;
  ProduceCollection produce_collection = 3;
}
message ProduceCollectionResponse{
  string code = 1;
  string message = 2;
  repeated ProduceCollection produce_collections = 3;
}
message ProduceCollectionStatusRequest{
  string id = 1;
  string phone_number = 2;
}
message AgentWeeklyTarget{
  string code = 1;
  string message = 2;
  Target agent_weekly_target = 3;
}
message AgentWeeklyTargetRequest{
  string name = 2;
  string description = 3;
  SourcingRequest agent = 4;
  double target_amount = 5;
  Produce product = 6;
}

message RegionsResponse{
  Country country = 1;
  repeated Region region = 2;
}
message StoreLocationsResponse{
  Region region = 1;
  repeated Location store_location = 2;
}
message ProduceCategoriesResponse{
  repeated Produce produce_category = 2;
}


message Otp{
  string id = 1;
  string phone_number = 2;
  string otp = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp expires_at = 5;
  bool is_expired = 6;
  bool is_verified = 7;
  SourcingRequest agent = 8;
}

message OtpRequest{
  SourcingRequest agent = 1;
  string otp = 2;
}

message OtpResponse{
  string code = 1;
  string message = 2;
  Otp otp = 3;
}
service SourcingService{
  //  agent management
  rpc RegisterSourcingAgent(RegisterSourcingRequest) returns (SourcingResponse);
  rpc GetSourcingAgentStatus(common.query.v1.QueryRequest) returns (SourcingResponse);
  rpc DisableSourcingAgent(SourcingRequest) returns (SourcingResponse);
  rpc EnableSourcingAgent(SourcingRequest) returns (SourcingResponse);
  rpc GetSourcingAgents(common.query.v1.QueryRequest) returns (SourcingAgentsResponse);

  //  OTP
  rpc VerifyOTP(OtpRequest) returns (OtpResponse);

  // farmer and produce management
  rpc RegisterFarmerAndProduce(RegisterFarmerRequest) returns (FarmerResponse);
  rpc GetProduceCollection(common.query.v1.QueryRequest) returns (ProduceCollectionResponse);
  rpc GetProduceCollectionStatus(common.query.v1.QueryRequest) returns (CollectionResponse);
  rpc GetFarmersAndProduce(common.query.v1.QueryRequest) returns (ProduceCollectionResponse);
  rpc DisableFarmerAndProduce(SourcingRequest) returns (FarmerResponse);

  
  //  target management
  rpc GetAgentWeeklyTarget(common.query.v1.QueryRequest) returns (AgentWeeklyTarget);
  rpc SetAgentWeeklyTarget(AgentWeeklyTargetRequest) returns (AgentWeeklyTarget);


  // configurations from erp
  rpc GetRegions(google.protobuf.Empty) returns (RegionsResponse);
  rpc GetStoreLocations(google.protobuf.Empty) returns (StoreLocationsResponse);
  rpc GetProduceCategories(google.protobuf.Empty) returns (ProduceCategoriesResponse);
}