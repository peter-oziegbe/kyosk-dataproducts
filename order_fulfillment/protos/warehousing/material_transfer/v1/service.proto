syntax = "proto3";

package warehousing.material_transfer.v1;

import "warehousing/material_transfer/v1/material_transfer.proto";
import "common/general/v1/async.proto";
import "google/protobuf/timestamp.proto";
import "common/query/v1/query.proto";

enum MovementType {
  DN_MOVEMENT = 0;
  DT_MOVEMENT = 1;
  DT_RETURNS = 2;
  DT_PARTIAL_RETURNS = 3;
  DT_TERRITORY_INTERWAREHOUSE = 4;
}

enum MovementStatus{
  PROCESSING = 0;
  PROCESSED = 1;
  RESETTING = 2;
  DISPATCHING = 3;
  DISPATCHED = 4;
  DRAFT = 5;
  CANCELLED = 6;
  RECEIVED = 7;

}

message Items {
  string item_name = 1;
  int32 quantity = 2;
  string uom = 3;
}

message PartialReturnItems {
  string item_name = 1;
  int32 return_quantity = 2;
}

// sync OMS warehouse with ERP stock
message ManualWarehouseStockSync{
  repeated Items items = 1;
  string warehouse_name = 2;
  string territory = 3;
  string id = 4;
  string user = 5;
}

message DispatchMovementCmd {

  string id = 1;
  // For DNs this is the DN id ; For Trips this the Delivery Trip Id
  string movement_entity_id = 2;

  string fulfillment_center_id = 4;

  MovementType movement_type = 8;

  string driver_warehouse_id = 11;

  repeated Items items = 15;

  common.general.v1.AsyncCmdStatus cmd_status = 18;

  google.protobuf.Timestamp created_at = 29;

  MovementStatus movement_status = 30;

  string failure_reason = 31;

  string remarks = 32;
}

message MaterialTransferCreateCmd{
  MaterialTransfer template = 1;
}

// Create a movement from the dispatch bay to the driver warehouse -> Movement to driver WH
message CreateMaterialTransferToDriverCmd{
  string delivery_trip_id = 1;
}

// Create a movement from the dispatch bay to the main warehouse -> Reset movement
message CreateResetMaterialTransferCmd{
  string delivery_trip_id = 1;
}

message MaterialTransferUpdateCmd{
  string id = 1;
  string material_transfer_id = 2;
  material_transfer.v1.MaterialTransferStatus to_status = 3;
  common.general.v1.AsyncUserContext user_ctx = 25;
  common.general.v1.AsyncCmdStatus cmd_status = 13;
  string cmd_status_notes = 18;
}

message MaterialTransferEntityId{
  string id = 1;
}

message MaterialTransferEntityResponse{
  MaterialTransfer material_transfer = 1;
}

message MaterialTransferQueryResponse {
  repeated MaterialTransfer material_transfers = 1;
}

message MaterialTransferCmdRequest {
  string id = 1;
}

message GenerateDriverReturnsRequest {
  string delivery_trip_id = 1;
}

message GeneratePartialReturnsRequest {
  string delivery_trip_id = 1;
  repeated PartialReturnItems return_items = 2;
}

message DispatchMovementCmdCmdRequest {
  string id = 1;
}


service MaterialTransferService {
  rpc CreateMaterialTransfer (MaterialTransferCreateCmd) returns (MaterialTransferEntityResponse);
  rpc UpdateMaterialTransfer (MaterialTransferUpdateCmd) returns (MaterialTransferUpdateCmd);
  rpc FetchMaterialTransfer (MaterialTransferEntityId) returns (MaterialTransferEntityResponse);
  rpc QueryMaterialTransfer(common.query.v1.QueryRequest) returns(MaterialTransferQueryResponse);
  rpc CreateMtToDriver (CreateMaterialTransferToDriverCmd) returns (MaterialTransferEntityResponse);
  rpc CreateResetMt (CreateResetMaterialTransferCmd) returns (MaterialTransferEntityResponse);
  rpc MaterialTransferCmd (MaterialTransferCmdRequest) returns (MaterialTransferUpdateCmd);
  rpc GenerateDriverReturns (GenerateDriverReturnsRequest) returns (MaterialTransferEntityResponse);
  rpc GeneratePartialReturns (GeneratePartialReturnsRequest) returns (MaterialTransferEntityResponse);
  rpc DispatchMovementCmdStatus (DispatchMovementCmdCmdRequest) returns (DispatchMovementCmd);
  rpc CreateManualWarehouseStockSync(ManualWarehouseStockSync) returns (MaterialTransfer);
}