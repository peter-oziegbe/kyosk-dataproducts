syntax = "proto3";

package dispatch.service_provider.v1;
import "common/audit/v1/audit.proto";
import "common/shared/v1/shared.proto";
import "common/query/v1/query.proto";

//option java_package = "kyosk.protobuf.service_provider.proto";
//option java_outer_classname = "service_provider_Wrapper";

enum ProviderType{
  UNSET = 0;
  VEHICLE = 1;
  DRIVER = 2;
  AGENT = 3;
  WAREHOUSE = 4;
}

message ServiceProvider{

  string id = 1;

  string name = 2;

  ProviderType provider_type = 3;

  string company_code = 4;

  string owner = 5;

  bool disabled = 10;
  bool is_frozen = 11;
  bool is_transporter = 12;
  string supplier_group = 13;
  string supplier_type = 14;
  string raw_payload = 15;

  common.audit.v1.Audit audit = 20;
  common.shared.v1.CountryCode country_code = 30;
  string country = 33;
  string legacy_id = 34;
  string erp_id = 35;

}

//Payload to create a new Service Provider
message ServiceProviderCreateCmd{
  string name = 1;
  ProviderType provider_type = 2;
  string company_code = 3;
  common.audit.v1.Audit audit = 4;
}

message ServiceProviderResponse {
  repeated ServiceProvider service_providers = 1;
}
message ServiceProviderEntityResponse{
  ServiceProvider service_provider = 1;
}
message ServiceProviderEntityId{
  string id = 1;
}

//Service definition
service ServiceProviderService {
  rpc QueryServiceProvider(common.query.v1.QueryRequest) returns(ServiceProviderResponse);
  rpc FetchServiceProvider (ServiceProviderEntityId) returns (ServiceProviderEntityResponse);
  rpc CreateServiceProvider(ServiceProviderCreateCmd) returns (ServiceProviderEntityResponse) {}
}
