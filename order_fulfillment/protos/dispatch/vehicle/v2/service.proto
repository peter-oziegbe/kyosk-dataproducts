syntax = "proto3";

package dispatch.vehicle.v2;

import "dispatch/vehicle/v2/vehicle.proto";
import "common/query/v1/query.proto";
import "common/entity_id/v1/entity_id.proto";

message VehicleCreateCmd{
  Vehicle template = 1;
}

message VehicleUpdateCmd{
  Vehicle template = 1;
}

message VehicleEntityResponse{
  Vehicle vehicle = 1;
}

message VehiclesQueryResponse{
  repeated Vehicle vehicles = 1;
}

message VehicleTerritoryMigrationCommand{
  string vehicle_id = 1;
  string territory_id = 2;
}

message ServiceProviderMigrationCommand{
  string vehicle_id = 1;
  string service_provider_id = 2;
}

//Service definition
service VehicleService {

  rpc CreateVehicle(VehicleCreateCmd) returns (VehicleEntityResponse);
  rpc UpdateVehicle(VehicleUpdateCmd) returns (VehicleEntityResponse);
  rpc FetchVehicle(common.entity_id.v1.EntityId) returns (VehicleEntityResponse);
  rpc QueryVehicle(common.query.v1.QueryRequest) returns(VehiclesQueryResponse);

  rpc AssignVehicleToTerritory(VehicleTerritoryMigrationCommand) returns (VehicleEntityResponse) {}
  rpc MoveVehicleToTerritory(VehicleTerritoryMigrationCommand) returns (VehicleEntityResponse) {}

  rpc MoveVehicleToServiceProvider(ServiceProviderMigrationCommand) returns (VehicleEntityResponse) {}
}