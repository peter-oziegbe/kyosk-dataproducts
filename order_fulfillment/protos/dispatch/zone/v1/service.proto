syntax = "proto3";

package dispatch.zone.v1;

import "dispatch/zone/v1/zone.proto";
import "common/query/v1/query.proto";
import "common/audit/v1/audit.proto";
import "common/grpc_response/v1/grpc_response.proto";
import "common/entity_id/v1/entity_id.proto";

message CreateZoneCommand {
  string name = 1;
  string territory_id = 2;
  int32 from_distance = 3;
  int32 to_distance = 4;
  common.audit.v1.Audit audit = 5;
}

message UpdateZoneCommand {
  string id = 1;
  string name = 2;
  int32 from_distance = 3;
  int32 to_distance = 4;
  common.audit.v1.Audit audit = 5;
}

message ZoneQueryResponse {
  repeated Zone zones = 1;
}

service ZoneService {
  rpc CreateZone (CreateZoneCommand) returns (common.grpc_response.v1.GrpcResponse);
  rpc QueryZone (common.query.v1.QueryRequest) returns (ZoneQueryResponse);
  // Should not be used to update Zone status, use DeleteZone, DeactivateZone and ReactivateZone instead
  rpc UpdateZone (UpdateZoneCommand) returns (common.grpc_response.v1.GrpcResponse);
  rpc DeleteZone (common.entity_id.v1.EntityId) returns (common.grpc_response.v1.GrpcResponse);
}
