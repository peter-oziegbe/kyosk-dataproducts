name: buf-retail_exp-squad
on: 
  pull_request: 
    branches: 
      - master ## target only PRs that target master... This references the base branch
    paths: 'retail_exp/**'
  push: # For Merge into master
    branches: 
      - master
    paths: 'retail_exp/**'
  workflow_dispatch: 
jobs:
  retail_exp-buf-build-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
      - uses: bufbuild/buf-setup-action@v1
        with:
          version: '1.8.0'
      - uses: bufbuild/buf-lint-action@v1
        with:
          input: 'retail_exp'
      - uses: bufbuild/buf-breaking-action@v1
        with:
          # The 'main' branch of the GitHub repository that defines the module.
          against: 'https://github.com/${GITHUB_REPOSITORY}.git#branch=master,subdir=retail_exp'
          input: 'retail_exp'
      - uses: bufbuild/buf-push-action@v1
        with:
          input: 'retail_exp'
          buf_token: ${{ secrets.BUF_TOKEN }}
  retail_exp-build_n_publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        
      - name: 'Extract Artifact Version To Use'
        run: |
          gsutil cp gs://ky_github_actions/kyosk-dataproducts/retail_exp_version version
          version=$(<version)
          if grep -q "SNAPSHOT" <<< "$version";
          then
             echo "NEW_VERSION=$version" >> $GITHUB_ENV   
          else 
            MAJOR=$(echo $version | cut -f1 -d.)
            MINOR=$(echo $version | cut -f2 -d.)
            PATCH=$(echo $version | cut -f3 -d.)
            PATCH=$((PATCH+1))
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
            echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV 
          fi  
      
         
      - uses: bufbuild/buf-setup-action@v1
        with:
          version: '1.8.0'
      - uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
      - name: "Generate Java Sources"
        run: |
          cd retail_exp
          ../bin/scripts/commands -g
        
          
      - name: ' Set up Java '
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          
      - name: "Run Gradle Build "
        uses: gradle/gradle-build-action@v2
        env: 
          NEW_VERSION: ${{ env.NEW_VERSION }}
        with: 
          arguments: publish
          gradle-version: 7.5.1
          cache-read-only: false
          build-root-directory: retail_exp/gen/java-src
